{
  "swagger": "2.0",
  "schemes": [
    "http",
    "https"
  ],
  "host": "220.230.114.8:3444",
  "basePath": "/",
  "info":
  {
    "description": "Dream comes truck!!<!-- ReDoc-Inject: <security-definitions> -->\n",
    "version": "1.0.0",
    "title": "EveryFoody",
    "x-logo":
    {
      "url": "https://s3.ap-northeast-2.amazonaws.com/everyfoody/everyfoody.png"
    }
  },
  "tags": [
  {
    "name": "sign",
    "description": "로그인, 회원가입 API"
  },
  {
    "name": "main",
    "description": "메인페이지 API"
  },
  {
    "name" : "store detail",
    "description" : "가게 상세페이지 API"
  }],
  "x-tagGroups": [
  {
    "name": "sign page",
    "tags": [
      "sign"
    ],
    "name": "main page",
    "tags": [
      "main"
    ],
    "name" : "store detail",
    "tags" : [
      "store detail"
    ]
  }],
  "securityDefinitions":
  {
    "petstore_auth":
    {
      "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
      "flow": "implicit",
      "scopes":
      {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    },
    "api_key":
    {
      "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    }
  },
  "paths":
  {
    "/signin":
    {
      "post":
      {
        "tags": [
          "sign"
        ],
        "summary": "이용자/사업자 통합 로그인",
        "description": "Facebook / Kakao로 로그인합니다.",
        "operationId": "sign in",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "유저 로그인을 하기 위한 email, uid, category 전달",
          "required": true,
          "schema":
          {
            "type": "object",
            "properties":
            {
              "email":
              {
                "description": "페이스북 or 카카오톡 id",
                "type": "string",
                "minLength": 1,
                "example" : "everyfoody@gmail.com"
              },
              "uid":
              {
                "description": "발급된 uid",
                "type": "string",
                "minLength": 1,
                "example" : "10985781390487"
              },
              "category":
              {
                "description": "Facebook/Kakao 구분, Facebook : 1 Kakao : 2",
                "type": "integer",
                "minLength": 1,
                "example" : 1
              }
            }
          }
        }],
        "responses":
        {
          "201":
          {
            "description": "로그인 성공",
            "schema":
            {
              "type": "object",
              "properties":
              {
                "status":
                {
                  "type": "string",
                  "description" : "성공 알림",
                  "example": "success"
                },
                "data":
                {
                  "type": "object",
                  "properties":
                  {
                    "token":
                    {
                      "description": "발급된 JWT토큰",
                      "type": "string",
                      "example": "10cz90u3tbn10udfhbfk1j3rbkdf9df"
                    },
                    "name":
                    {
                      "description": "이용자가 등록한 이름",
                      "type": "string",
                      "example": "김연태"
                    },
                    "category":
                    {
                      "description": "이용자/사업자 구분, 이용자 : 1 사업자 : 2",
                      "type": "integer",
                      "example": 1
                    }
                  }

                },
                "msg":
                {
                  "type": "string",
                  "description" : "로그인 성공 알림메세지",
                  "example": "successful customer facebook login"
                }
              }
            }
          },
          "405":
          {
            "description": "unregistrated ID",
            "schema":
              {
                "$ref":"#/definitions/failMessage"
              }
          }
        }
      }
    },
    "/signup/customer":
    {
      "post":
      {
        "tags": [
          "sign"
        ],
        "summary": "이용자 회원가입",
        "description": "Facebook / Kakao로 이용자 회원가입을 합니다.",
        "operationId": "customer sign up",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "유저 회원가입을 하기 위한 email, uid, name, category 전달",
          "required": true,
          "schema":
          {
            "type": "object",
            "properties":
            {
              "email":
              {
                "description": "페이스북 or 카카오톡 id",
                "type": "string",
                "minLength": 1,
                "example" : "everyfoody@gmail.com"
              },
              "uid":
              {
                "description": "발급된 uid",
                "type": "string",
                "minLength": 1,
                "example" : "10985781390487"
              },
              "name":
              {
                "description" : "유저가 적은 이름",
                "type": "string",
                "minLength" : 1
              },
              "category":
              {
                "description": "Facebook/Kakao 구분, Facebook : 1 Kakao : 2",
                "type": "integer",
                "minLength": 1,
                "example" : 1
              }
            }
          }
        }],
        "responses":
        {
          "201":
          {
            "description": "이용자 회원가입 성공",
            "schema":
            {
              "type": "object",
              "properties":
              {
                "status":
                {
                  "type": "string",
                  "description" : "성공 알림",
                  "example": "success"
                },
                "msg":
                {
                  "type": "string",
                  "description" : "회원가입 성공 알림 메세지",
                  "example": "successful customer signup"
                }
              }
            }
          }
        }
      }
    },
    "/signup/owner":
    {
      "post":
      {
        "tags": [
          "sign"
        ],
        "summary": "사업자 회원가입",
        "description": "Facebook / Kakao로 사업자 회원가입을 합니다.",
        "operationId": "owner signup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "사업자 회원가입을 하기 위한 정보 전달",
          "required": true,
          "schema":
          {
            "type": "object",
            "properties":
            {
              "email":
              {
                "description": "페이스북 or 카카오톡 id",
                "type": "string",
                "minLength": 1,
                "example" : "everyfoody@gmail.com"
              },
              "uid":
              {
                "description": "발급된 uid",
                "type": "string",
                "minLength": 1,
                "example" : "10985781390487"
              },
              "name":
              {
                "description" : "사업자가 적은 이름",
                "type": "string",
                "minLength" : 1,
                "example" : "김연태"
              },
              "category":
              {
                "description": "Facebook/Kakao 구분, Facebook : 1 Kakao : 2",
                "type": "integer",
                "minLength": 1,
                "example" : 1
              }
            }
          }
        }],
        "responses":
        {
          "201":
          {
            "description": "사업자 회원가입 성공",
            "schema":
            {
              "type": "object",
              "properties":
              {
                "status":
                {
                  "type": "string",
                  "description" : "성공 알림",
                  "example": "success"
                },
                "msg":
                {
                  "type": "string",
                  "description" : "사업자 회원가입 성공알림 메세지",
                  "example": "successful owner signup"
                }
              }
            }
          }
        }
      }
    },
    "/main/:location/:count" :
    {
      "get" :
      {
        "tags": [
          "main"
        ],
        "summary": "EveryFoody 메인화면",
        "description": "비로그인시 메인화면에서 예약작업 불가.",
        "operationId": "main",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
        {
          "in": "header",
          "name": "JWT token",
          "description": "사용자 인증을 위한 token",
          "required": true,
          "type" : "string",
          "schema":
          {
            "type": "string",
            "properties":
            {
              "token":
              {
                "description": "JWT token",
                "type": "string",
                "minLength": 1,
                "example" : "ThisIsDummyToken120985713804ufdhjl;aefuoj"
              }
            }
          }
        },
        {
          "in": "query",
          "name": "location",
          "description": "사용자가 선택한 지도내 위치",
          "required": true,
          "type" : "string",
          "schema":
          {
            "type": "object",
            "properties":
            {
              "location":
              {
                "description": "사용자가 선택한 위치",
                "type": "string",
                "minLength": 1,
                "example" : "North2"
              }
            }
          }
        },
        {
          "in": "query",
          "name": "count",
          "description": "사용자가 몇번이나 호출했는지 횟수, 1회당 10개 푸드트럭 호",
          "required": true,
          "type" : "string",
          "schema":
          {
            "type": "object",
            "properties":
            {
              "count" :
              {
                "description" : "사용자가 몇번이나 호출했는지, 1회당 10개푸드트럭",
                "type" : "integer",
                "minLength" : 1,
                "example" : 1
              }
            }
          }
        }],
        "responses":
        {
          "200":
          {
            "description": "가까운 위치별로 10개씩 제공된 푸드트럭 정보",
            "schema":
            {
              "type": "object",
              "properties":
              {
                "status":
                {
                  "type": "string",
                  "description" : "성공 알림",
                  "example": "success"
                },
                "data" :
                {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : 
                    {
                      "address" :
                      {
                        "type" : "string",
                        "description" : "중간 카테고리 주소",
                        "example" : "서울시 마포구"
                      },
                      "storeInfo" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : 
                          {
                            "storeID" : 
                            {
                              "type" : "int",
                              "description" : "푸드트럭 등록 ID",
                              "example" : 18
                            },
                            "storeName" : 
                            {
                              "type" : "string",
                              "description" : "푸드트럭 이름",
                              "example" : "dongsu's store"
                            },
                            "storeImageURL" :
                            {
                              "type" : "string",
                              "description" : "푸드트럭 이미지 URL",
                              "example" : "aaa"
                            },
                            "reservationCount" :
                            {
                              "type" : "integer",
                              "description" : "예약대기자수",
                              "example" : 5
                            },
                            "distance" : 
                            {
                              "type" : "integer",
                              "description" : "푸드트럭까지 거리, 단위 m",
                              "example" : 280
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "msg":
                {
                  "type": "string",
                  "description" : "푸드트럭정보 로딩 성공 메세지",
                  "example": "successful 1st loading"
                }
              }
            }
          }
        }      
      }
    },
    "/reservation/list" :
    {
      "get" :
      {
        "tags": [
          "main"
        ],
        "summary": "예약내역 리스트",
        "description": "드로워 - 예약내역 - 리스트",
        "operationId": "main",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
        {
          "in": "header",
          "name": "JWT token",
          "description": "사용자 인증을 위한 token",
          "required": true,
          "type" : "string",
          "schema":
          {
            "type": "string",
            "properties":
            {
              "token":
              {
                "description": "JWT token",
                "type": "string",
                "minLength": 1,
                "example" : "ThisIsDummyToken120985713804ufdhjl;aefuoj"
              }
            }
          }
        }],
        "responses":
        {
          "200":
          {
            "description": "최근시간으로 정렬된 예약한 푸드트럭 정보",
            "schema":
            {
              "type": "object",
              "properties":
              {
                "status":
                {
                  "type": "string",
                  "description" : "성공 알림",
                  "example": "success"
                },
                "data" :
                {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : 
                    {
                      "address" :
                      {
                        "type" : "string",
                        "description" : "중간 카테고리 주소",
                        "example" : "서울시 마포구"
                      },
                      "store" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : 
                          {
                            "storeID" :
                            {
                              "type" : "integer",
                              "description" : "푸드트럭 ID",
                              "example" : 5
                            },
                            "storeName" : 
                            {
                              "type" : "string",
                              "description" : "푸드트럭 이름",
                              "example" : "dongsu's store"
                            },
                            "storeImageURL" :
                            {
                              "type" : "string",
                              "description" : "푸드트럭 이미지 URL",
                              "example" : "aaa"
                            },
                            "reservationTime" :
                            {
                              "type" : "string",
                              "description" : "예약한 시간",
                              "example" : "2017.10.05 18:00"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "msg":
                {
                  "type": "string",
                  "description" : "예약정보 로딩 성공 메세지",
                  "example": "successful loading"
                }
              }
            }
          }
        }      
      }
    },
    "/bookmark/list" :
    {
      "get" :
      {
        "tags": [
          "main"
        ],
        "summary": "즐겨찾기 리스트",
        "description": "드로워 - 즐겨찾기 - 리스트",
        "operationId": "main",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
        {
          "in": "header",
          "name": "JWT token",
          "description": "사용자 인증을 위한 token",
          "required": true,
          "type" : "string",
          "schema":
          {
            "type": "string",
            "properties":
            {
              "token":
              {
                "description": "JWT token",
                "type": "string",
                "minLength": 1,
                "example" : "ThisIsDummyToken120985713804ufdhjl;aefuoj"
              }
            }
          }
        }],
        "responses":
        {
          "200":
          {
            "description": "거리순으로 정렬된 즐겨찾기한 푸드트럭 정보",
            "schema":
            {
              "type": "object",
              "properties":
              {
                "status":
                {
                  "type": "string",
                  "description" : "성공 알림",
                  "example": "success"
                },
                "data" :
                {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : 
                    {
                      "address" :
                      {
                        "type" : "string",
                        "description" : "중간 카테고리 주소",
                        "example" : "서울시 마포구"
                      },
                      "store" : {
                        "type" : "array",
                        "items" : {
                          "type" : "object",
                          "properties" : 
                          {
                            "storeID" :
                            {
                              "type" : "integer",
                              "description" : "푸드트럭 ID",
                              "example" : 5
                            },
                            "storeName" : 
                            {
                              "type" : "string",
                              "description" : "푸드트럭 이름",
                              "example" : "dongsu's store"
                            },
                            "storeImageURL" :
                            {
                              "type" : "string",
                              "description" : "푸드트럭 이미지 URL",
                              "example" : "aaa"
                            },
                            "reservationCount" :
                            {
                              "type" : "integer",
                              "description" : "예약대기자수",
                              "example" : 5
                            },
                            "distance" : 
                            {
                              "type" : "integer",
                              "description" : "푸드트럭까지 거리, 단위 m",
                              "example" : 280
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "msg":
                {
                  "type": "string",
                  "description" : "북마크정보 로딩 성공 메세지",
                  "example": "successful loading"
                }
              }
            }
          }
        }      
      }
    },
    "/bookmark/compilation/:storeID" :
    {
      "put" :
      {
        "tags": [
          "main"
        ],
        "summary": "즐겨찾기 리스트",
        "description": "드로워 - 즐겨찾기 - 리스트",
        "operationId": "main",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml",
          "application/json"
        ],
        "parameters": [
        {
          "in": "header",
          "name": "JWT token",
          "description": "사용자 인증을 위한 token",
          "required": true,
          "type" : "string",
          "schema":
          {
            "type": "string",
            "properties":
            {
              "token":
              {
                "description": "JWT token",
                "type": "string",
                "minLength": 1,
                "example" : "ThisIsDummyToken120985713804ufdhjl;aefuoj"
              }
            }
          }
        },
        {
          "in": "query",
          "name": "storeID",
          "description": "북마크 추가/제거할 가게 ID",
          "required": true,
          "type" : "integer",
          "schema":
          {
            "type": "integer",
            "properties":
            {
              "storeID":
              {
                "description": "storeID",
                "type": "integer",
                "example" : 123
              }
            }
          }
        }],
        "responses":
        {
          "200":
          {
            "description": "북마크 추가/제거 완료.",
            "schema":
            {
              "type": "object",
              "properties":
              {
                "status":
                {
                  "type": "string",
                  "description" : "성공 알림",
                  "example": "success"
                },
                "msg":
                {
                  "type": "string",
                  "description" : "북마크 추가/제거 성공 메세지",
                  "example": "successful add / delete bookmark list"
                }
              }
            }
          }
        }      
      }
    }
  },





  "definitions":
  {
    "ID":
    {
      "type": "object",
      "properties":
      {
        "id":
        {
          "description": "관리자 ID",
          "type": "string",
          "minLength": 1
        },
        "pwd":
        {
          "description": "관리자 비밀번호",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "Category":
    {
      "type": "object",
      "properties":
      {
        "id":
        {
          "description": "Category ID",
          "allOf": [
          {
            "$ref": "#/definitions/Id"
          }]
        },
        "name":
        {
          "description": "Category name",
          "type": "string",
          "minLength": 1
        },
        "sub":
        {
          "description": "Test Sub Category",
          "type": "object",
          "properties":
          {
            "prop1":
            {
              "type": "string",
              "description": "Dumb Property"
            }
          }
        }
      },
      "xml":
      {
        "name": "Category"
      }
    },
    "failMessage":
    {
      "type": "object",
      "properties":
      {
        "status":
        {
          "type": "string",
          "example": "fail"
        },
        "message":
        {
          "type": "string",
          "example": "fail reason"
        }
      }
    },
    "Dog":
    {
      "description": "A representation of a dog",
      "allOf": [
      {
        "$ref": "#/definitions/Pet"
      },
      {
        "type": "object",
        "properties":
        {
          "packSize":
          {
            "type": "integer",
            "format": "int32",
            "description": "The size of the pack the dog is from",
            "default": 1,
            "minimum": 1
          }
        },
        "required": [
          "packSize"
        ]
      }]
    },
    "HoneyBee":
    {
      "description": "A representation of a honey bee",
      "allOf": [
      {
        "$ref": "#/definitions/Pet"
      },
      {
        "type": "object",
        "properties":
        {
          "honeyPerDay":
          {
            "type": "number",
            "description": "Average amount of honey produced per day in ounces",
            "example": 3.14
          }
        },
        "required": [
          "honeyPerDay"
        ]
      }]
    },
    "Id":
    {
      "type": "integer",
      "format": "int64"
    },
    "Order":
    {
      "type": "object",
      "properties":
      {
        "id":
        {
          "description": "Order ID",
          "allOf": [
          {
            "$ref": "#/definitions/Id"
          }]
        },
        "petId":
        {
          "description": "Pet ID",
          "allOf": [
          {
            "$ref": "#/definitions/Id"
          }]
        },
        "quantity":
        {
          "type": "integer",
          "format": "int32",
          "minimum": 1,
          "default": 1
        },
        "shipDate":
        {
          "description": "Estimated ship date",
          "type": "string",
          "format": "date-time"
        },
        "status":
        {
          "type": "string",
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete":
        {
          "description": "Indicates whenever order was completed or not",
          "type": "boolean",
          "default": false
        }
      },
      "xml":
      {
        "name": "Order"
      }
    },
    "Pet":
    {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "discriminator": "petType",
      "properties":
      {
        "id":
        {
          "description": "Pet ID",
          "allOf": [
          {
            "$ref": "#/definitions/Id"
          }]
        },
        "category":
        {
          "description": "Categories this pet belongs to",
          "allOf": [
          {
            "$ref": "#/definitions/Category"
          }]
        },
        "name":
        {
          "description": "The name given to a pet",
          "type": "string",
          "example": "Guru"
        },
        "photoUrls":
        {
          "description": "The list of URL to a cute photos featuring pet",
          "type": "array",
          "xml":
          {
            "name": "photoUrl",
            "wrapped": true
          },
          "items":
          {
            "type": "string",
            "format": "url"
          }
        },
        "tags":
        {
          "description": "Tags attached to the pet",
          "type": "array",
          "xml":
          {
            "name": "tag",
            "wrapped": true
          },
          "items":
          {
            "$ref": "#/definitions/Tag"
          }
        },
        "status":
        {
          "type": "string",
          "description": "Pet status in the store",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        },
        "petType":
        {
          "description": "Type of a pet",
          "type": "string"
        }
      },
      "xml":
      {
        "name": "Pet"
      }
    },
    "Tag":
    {
      "type": "object",
      "properties":
      {
        "id":
        {
          "description": "Tag ID",
          "allOf": [
          {
            "$ref": "#/definitions/Id"
          }]
        },
        "name":
        {
          "description": "Tag name",
          "type": "string",
          "minLength": 1
        }
      },
      "xml":
      {
        "name": "Tag"
      }
    },
    "User":
    {
      "type": "object",
      "properties":
      {
        "id":
        {
          "description": "User ID",
          "$ref": "#/definitions/Id"
        },
        "username":
        {
          "description": "User supplied username",
          "type": "string",
          "minLength": 4,
          "example": "John78"
        },
        "firstName":
        {
          "description": "User first name",
          "type": "string",
          "minLength": 1,
          "example": "John"
        },
        "lastName":
        {
          "description": "User last name",
          "type": "string",
          "minLength": 1,
          "example": "Smith"
        },
        "email":
        {
          "description": "User email address",
          "type": "string",
          "format": "email",
          "example": "john.smith@example.com"
        },
        "password":
        {
          "type": "string",
          "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits",
          "format": "password",
          "minLength": 8,
          "pattern": "(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])",
          "example": "drowssaP123"
        },
        "phone":
        {
          "description": "User phone number in international format",
          "type": "string",
          "pattern": "^\\+(?:[0-9]-?){6,14}[0-9]$",
          "example": "+1-202-555-0192",
          "x-nullable": true
        },
        "userStatus":
        {
          "description": "User status",
          "type": "integer",
          "format": "int32"
        }
      },
      "xml":
      {
        "name": "User"
      }
    }
  }
}